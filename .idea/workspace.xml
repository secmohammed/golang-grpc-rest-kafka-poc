<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="12319c78-1751-4e32-bb50-23766cadeb77" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="gke_top-branch-136923_us-central1-a_pickspace-plus-cluster" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2LjA0UEbPbAPAvX2fNYtwroc2J4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.vendoring.notification.had.been.shown": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/mohammed/go/src/github.com/secmohammed/golang-kafka-grpc-poc",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/handlers/rest" />
      <recent name="$PROJECT_DIR$/app/usecase" />
      <recent name="$PROJECT_DIR$/app/repository" />
      <recent name="$PROJECT_DIR$/companies/config" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/integration/user" />
      <recent name="$PROJECT_DIR$/tests/integration/company" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/companies/app/repository/company" />
      <recent name="$PROJECT_DIR$/companies/app/usecase/company" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestCannotCreateCompanyIfTokenNotPassed in github.com/secmohammed/golang-kafka-grpc-poc/tests/integration/company">
    <configuration name="TestCannotCreateCompanyIfTokenNotPassed in github.com/secmohammed/golang-kafka-grpc-poc/tests/integration/company" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-kafka-grpc-poc" />
      <working_directory value="$PROJECT_DIR$/tests/integration/company" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/secmohammed/golang-kafka-grpc-poc/tests/integration/company" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCannotCreateCompanyIfTokenNotPassed\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLoginWithValidCredentials in github.com/secmohammed/golang-kafka-grpc-poc/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-kafka-grpc-poc" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/secmohammed/golang-kafka-grpc-poc/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLoginWithValidCredentials\E$" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestCannotCreateCompanyIfTokenNotPassed in github.com/secmohammed/golang-kafka-grpc-poc/tests/integration/company" />
        <item itemvalue="Go Test.TestLoginWithValidCredentials in github.com/secmohammed/golang-kafka-grpc-poc/tests/integration" />
        <item itemvalue="Docker.docker-compose.yaml.db: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="12319c78-1751-4e32-bb50-23766cadeb77" name="Changes" comment="" />
      <created>1676373895334</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676373895334</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>